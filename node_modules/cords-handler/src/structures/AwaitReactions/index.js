class AwaitReactions {
  constructor() {}
  async start(message, author, reactions, time) {
    if (!message) throw new ReferenceError("Message Must Be Supplied.");
    if (!author) throw new ReferenceError("Author Must Be Supplied.");
    if (!reactions) throw new ReferenceError("Reactions Must Be Supplied.");
    if (!time) throw new ReferenceError("Time Must Be Supplied.");
    if (typeof time !== "number")
      throw new ReferenceError("Time Must Be Number.(Miliseconds)");

    for (var reactn of reactions) await message.react(reactn);
    const filter = (reaction, user) =>
      reactions.includes(reaction.emoji.name) && user.id === author.id;
    return message
      .awaitReactions(filter, { max: 1, time: time })
      .then((data) => data.first() && data.first().emoji.name);
  }
}
module.exports = AwaitReactions;
